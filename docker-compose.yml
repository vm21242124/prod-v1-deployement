version: '3.8'

services:
  api-gateway:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - redis
    networks:
      - api-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - api-network
    restart: unless-stopped

  # Eureka Server
  eureka-server:
    build: ../eureka
    ports:
      - "8761:8761"
    networks:
      - api-network
    restart: unless-stopped

  # User Service
  user-service:
    build: ../userService
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5433/userservice
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - postgres
      - eureka-server
    networks:
      - api-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: userservice
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5433"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - api-network
    restart: unless-stopped

volumes:
  redis-data:
  postgres-data:

networks:
  api-network:
    driver: bridge
